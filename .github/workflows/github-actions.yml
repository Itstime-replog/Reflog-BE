name: CI/CD using actions & docker

on:
  push:
    branches: ["main", "develop"]
  pull_request:
    branches: ["main", "develop"]

permissions:
  contents: read

jobs:
  CI-CD:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission to Gradle wrapper
        run: chmod +x ./gradlew

      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build with Gradle
        run: ./gradlew build -x test

      - name: Docker build & push
        run: |
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          docker build -f Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/docker-test .
          docker push ${{ secrets.DOCKER_USERNAME }}/docker-test

      - name: Deploy
        uses: appleboy/ssh-action@master
        id: deploy
        with:
          host: ${{ secrets.HOST_PROD }}
          username: ubuntu
          key: ${{ secrets.PRIVATE_KEY }}
          envs: GITHUB_SHA
          script: |
            sudo docker ps
            sudo docker stop docker-test || true
            sudo docker rm docker-test || true
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/docker-test
            sudo docker run -d -p 8080:8080 \
              -e DB_URL=${{ secrets.DB_URL }} \
              -e DB_USERNAME=${{ secrets.DB_USERNAME }} \
              -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
              -e SPRING_PROFILES_ACTIVE=prod \
              ${{ secrets.DOCKER_USERNAME }}/docker-test
            sudo docker image prune -f
